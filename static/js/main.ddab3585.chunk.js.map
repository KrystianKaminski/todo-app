{"version":3,"sources":["App.js","index.js"],"names":["API_URL","App","state","tasks","taskName","handleChange","event","_this","setState","target","value","handleClick","newTask","completed","fetch","concat","method","body","JSON","stringify","then","response","json","data","id","name","push","alert","handleKeyDown","keyCode","handleDelete","loadData","handleCheck","task","_this2","this","tasksList","Object","entries","map","_ref","_ref2","slicedToArray","values","_this3","react_default","a","createElement","className","TextField_default","hintText","onChange","onKeyDown","type","RaisedButton_default","primary","label","onClick","List","key","primaryText","leftCheckbox","Checkbox_default","defaultChecked","onCheck","rightIconButton","IconButton_default","delete_default","React","Component","ReactDOM","render","MuiThemeProvider_default","src_App","document","getElementById"],"mappings":"oSASMA,EAAU,4CA0HDC,6MAtHbC,MAAQ,CACNC,MAAO,GACPC,SAAU,MAGZC,aAAe,SAACC,GACdC,EAAKC,SAAS,CAACJ,SAAUE,EAAMG,OAAOC,WAuBxCC,YAAc,WACZ,GAA4B,KAAxBJ,EAAKL,MAAME,SAAiB,CAC9B,IAAID,EAAQI,EAAKL,MAAMC,MACnBS,EAAU,CAAER,SAAUG,EAAKL,MAAME,SAAUS,WAAW,GAC1DC,MAAK,GAAAC,OAAIf,EAAJ,eAA0B,CAC7BgB,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,KACpBQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJX,EAAQY,GAAKD,EAAKE,KAClBtB,EAAMuB,KAAKd,GACXL,EAAKC,SAAS,CAACL,QAAMC,SAAU,YAGnCuB,MAAK,iCAITC,cAAgB,SAAAtB,GACQ,KAAlBA,EAAMuB,SACRtB,EAAKI,iBAITmB,aAAe,SAACN,GACdV,MAAK,GAAAC,OAAIf,EAAJ,WAAAe,OAAqBS,EAArB,SAAgC,CACnCR,OAAQ,WAETI,KAAK,WACJb,EAAKwB,gBAITC,YAAc,SAAAC,GAOZnB,MAAK,GAAAC,OAAIf,EAAJ,WAAAe,OAAqBkB,EAAKT,GAA1B,SAAqC,CACxCR,OAAQ,QACRC,KAAMC,KAAKC,UAAU,CAACN,WAAYoB,EAAKpB,cAExCO,KAAK,WACJb,EAAKwB,wFAjEE,IAAAG,EAAAC,KACTrB,MAAK,GAAAC,OAAIf,EAAJ,gBACJoB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ,GAAKA,EAAL,CAIA,IACMa,EADQC,OAAOC,QAAQf,GACLgB,IAAI,SAAAC,GAAkB,IAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAAhBhB,EAAgBiB,EAAA,GAAZE,EAAYF,EAAA,GAE5C,OADAE,EAAOnB,GAAKA,EACLmB,IAETT,EAAK1B,SAAS,CAAEL,MAAOiC,SARrBF,EAAK1B,SAAS,CAACL,MAAO,oDAa1BgC,KAAKJ,4CAmDE,IAAAa,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACII,SAAS,uBACTxC,MAAOyB,KAAKjC,MAAME,SAClB+C,SAAUhB,KAAK9B,aACf+C,UAAWjB,KAAKP,cAChByB,KAAK,SAETR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACIS,SAAS,EACTC,MAAM,MACNC,QAAStB,KAAKxB,cAElBkC,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACW,EAAA,KAAD,KACCvB,KAAKjC,MAAMC,MAAMoC,IAAI,SAAAN,GAAI,OACxBY,EAAAC,EAAAC,cAACW,EAAA,SAAD,CACEC,IAAK1B,EAAKT,GACVoC,YAAa3B,EAAK7B,SAClByD,aACAhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACGiB,eAAgB9B,EAAKpB,UACrBmD,QAAS,kBAAMpB,EAAKZ,YAAYC,MAEnCgC,gBACEpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,KACCD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CACEW,QAAS,kBAAMb,EAAKd,aAAaG,EAAKT,sBA7GxC4C,IAAMC,WCNxBC,IAASC,OACL1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,KACID,EAAAC,EAAAC,cAAC0B,EAAD,OAENC,SAASC,eAAe","file":"static/js/main.ddab3585.chunk.js","sourcesContent":["import React from 'react';\n\nimport TextField from 'material-ui/TextField'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport {List, ListItem} from 'material-ui/List'\nimport Checkbox from 'material-ui/Checkbox'\nimport DeleteIcon from 'material-ui/svg-icons/action/delete';\nimport IconButton from 'material-ui/IconButton'\n\nconst API_URL = 'https://krystian-kaminski.firebaseio.com/'\n\nclass App extends React.Component {\n\n  state = {\n    tasks: [],\n    taskName: ''\n  }\n\n  handleChange = (event) => {\n    this.setState({taskName: event.target.value})\n  }\n\n  loadData() {\n    fetch(`${API_URL}/tasks.json`)\n    .then(response => response.json())\n    .then(data =>  {\n      if (!data) {\n        this.setState({tasks: []})\n        return\n      }\n      const array = Object.entries(data) // index 0 - klucze, index 1 - obiekty zadan\n      const tasksList = array.map(([id, values]) => {\n        values.id = id // stworzenie nowej właściwości w obiekcie zadania\n        return values\n      })\n      this.setState({ tasks: tasksList})\n    })\n  }\n\n  componentWillMount() {\n    this.loadData()\n  }\n  handleClick = () => {\n    if (this.state.taskName !== '') {\n      let tasks = this.state.tasks\n      let newTask = { taskName: this.state.taskName, completed: false}\n      fetch(`${API_URL}/tasks.json`, {\n        method: 'POST',\n        body: JSON.stringify(newTask)\n      }).then(response => response.json())\n        .then(data => {\n          newTask.id = data.name\n          tasks.push(newTask)\n          this.setState({tasks,taskName: ''})\n        })\n    } else {\n      alert(`You can't add empty value!`)\n    }\n  }\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      this.handleClick()\n    }\n  }\n\n  handleDelete = (id) => {\n    fetch(`${API_URL}/tasks/${id}.json`, {\n      method: 'DELETE'\n    })\n    .then(() => {\n      this.loadData()\n    })\n  }\n\n  handleCheck = task => {\n    // task.completed = !task.completed\n    // fetch(`${API_URL}/tasks/${task.id}.json`, {\n    //   method: 'PUT',\n    //   body: JSON.stringify(task)\n    // })\n\n    fetch(`${API_URL}/tasks/${task.id}.json`, {\n      method: 'PATCH',\n      body: JSON.stringify({completed: !task.completed})\n    })\n    .then(() => {\n      this.loadData()\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TextField\n            hintText=\"Enter your task here\"\n            value={this.state.taskName}\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n            type=\"text\"\n        />\n        <RaisedButton\n            primary={true}\n            label=\"Add\"\n            onClick={this.handleClick}\n            />\n        <div>\n           <List>\n           {this.state.tasks.map(task => (\n             <ListItem\n               key={task.id}\n               primaryText={task.taskName}\n               leftCheckbox={\n               <Checkbox\n                  defaultChecked={task.completed}\n                  onCheck={() => this.handleCheck(task)}\n                />}\n               rightIconButton={\n                 <IconButton>\n                  <DeleteIcon\n                    onClick={() => this.handleDelete(task.id)} />\n                  </IconButton>\n               }\n                />\n           ))}\n          </List>\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport App from './App';\n\nReactDOM.render(\n    <MuiThemeProvider>\n        <App />\n    </MuiThemeProvider>\n, document.getElementById('root'));"],"sourceRoot":""}